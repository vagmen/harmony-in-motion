// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
  [KeyType in keyof T]: T[KeyType];
};
/** Content for Автор documents */
interface AuthorDocumentData {
  /**
   * Имя field in *Автор*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: author.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  name: prismicT.KeyTextField;
  /**
   * Должность field in *Автор*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: author.position
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  position: prismicT.KeyTextField;
  /**
   * Фото field in *Автор*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: author.photo
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  photo: prismicT.ImageField<never>;
}
/**
 * Автор document from Prismic
 *
 * - **API ID**: `author`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type AuthorDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<
    Simplify<AuthorDocumentData>,
    "author",
    Lang
  >;
/** Content for Раздел documents */
type CategoryDocumentData = Record<string, never>;
/**
 * Раздел document from Prismic
 *
 * - **API ID**: `category`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type CategoryDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithUID<
    Simplify<CategoryDocumentData>,
    "category",
    Lang
  >;
/** Content for Конфигурация documents */
interface ConfigDocumentData {
  /**
   * Логотип field in *Конфигурация*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: config.logo
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  logo: prismicT.ImageField<never>;
  /**
   * Кнопки в шапке field in *Конфигурация*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: config.buttons[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/group
   *
   */
  buttons: prismicT.GroupField<Simplify<ConfigDocumentDataButtonsItem>>;
  /**
   * Кнопки внизу field in *Конфигурация*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: config.buttonsbottom[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/group
   *
   */
  buttonsbottom: prismicT.GroupField<
    Simplify<ConfigDocumentDataButtonsbottomItem>
  >;
  /**
   * Показывать кнопку переключения темы field in *Конфигурация*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: config.isthemeswitchervisible
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
   *
   */
  isthemeswitchervisible: prismicT.BooleanField;
  /**
   * Slice Zone field in *Конфигурация*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: config.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/slices
   *
   */
  slices: prismicT.SliceZone<ConfigDocumentDataSlicesSlice>;
}
/**
 * Item in Конфигурация → Кнопки в шапке
 *
 */
export interface ConfigDocumentDataButtonsItem {
  /**
   * Название кнопки field in *Конфигурация → Кнопки в шапке*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: config.buttons[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * Тип кнопки field in *Конфигурация → Кнопки в шапке*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: config.buttons[].variant
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  variant: prismicT.SelectField<
    | "Выпуклая"
    | "Заполненная"
    | "Тональная"
    | "Контурная"
    | "Текстовая"
    | "Подчеркнутая"
  >;
  /**
   * Ссылка field in *Конфигурация → Кнопки в шапке*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: config.buttons[].link
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  link: prismicT.LinkField;
  /**
   * Размер кнопки field in *Конфигурация → Кнопки в шапке*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: config.buttons[].size
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  size: prismicT.SelectField<"Маленькая" | "Средняя" | "Большая" | "Огромная">;
}
/**
 * Item in Конфигурация → Кнопки внизу
 *
 */
export interface ConfigDocumentDataButtonsbottomItem {
  /**
   * Название кнопки field in *Конфигурация → Кнопки внизу*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: config.buttonsbottom[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * Тип кнопки field in *Конфигурация → Кнопки внизу*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: config.buttonsbottom[].variant
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  variant: prismicT.SelectField<
    | "Выпуклая"
    | "Заполненная"
    | "Тональная"
    | "Контурная"
    | "Текстовая"
    | "Подчеркнутая"
  >;
  /**
   * Размер кнопки field in *Конфигурация → Кнопки внизу*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: config.buttonsbottom[].size
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  size: prismicT.SelectField<"Маленькая" | "Средняя" | "Большая" | "Огромная">;
  /**
   * Ссылка field in *Конфигурация → Кнопки внизу*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: config.buttonsbottom[].link
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  link: prismicT.LinkField;
}
/**
 * Slice for *Конфигурация → Slice Zone*
 *
 */
type ConfigDocumentDataSlicesSlice = never;
/**
 * Конфигурация document from Prismic
 *
 * - **API ID**: `config`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ConfigDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<
    Simplify<ConfigDocumentData>,
    "config",
    Lang
  >;
/** Content for Контакты documents */
interface ContactsDocumentData {
  /**
   * address field in *Контакты*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: contacts.address
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  address: prismicT.KeyTextField;
  /**
   * phone field in *Контакты*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: contacts.phone
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  phone: prismicT.KeyTextField;
}
/**
 * Контакты document from Prismic
 *
 * - **API ID**: `contacts`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ContactsDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<
    Simplify<ContactsDocumentData>,
    "contacts",
    Lang
  >;
/** Content for Меню documents */
interface MenuDocumentData {
  /**
   * menuItem field in *Меню*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: menu.menuitem[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/group
   *
   */
  menuitem: prismicT.GroupField<Simplify<MenuDocumentDataMenuitemItem>>;
}
/**
 * Item in Меню → menuItem
 *
 */
export interface MenuDocumentDataMenuitemItem {
  /**
   * title field in *Меню → menuItem*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: menu.menuitem[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * icon field in *Меню → menuItem*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: menu.menuitem[].icon
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  icon: prismicT.ImageField<never>;
  /**
   * Страница field in *Меню → menuItem*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: menu.menuitem[].pageRelationshipField
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  pageRelationshipField: prismicT.RelationField<"page">;
}
/**
 * Меню document from Prismic
 *
 * - **API ID**: `menu`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type MenuDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<Simplify<MenuDocumentData>, "menu", Lang>;
/** Content for Страница documents */
interface PageDocumentData {
  /**
   * Адрес страницы field in *Страница*
   *
   * - **Field Type**: Text
   * - **Placeholder**: /blog/post
   * - **API ID Path**: page.path
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  path: prismicT.KeyTextField;
  /**
   * SEO field in *Страница*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/group
   *
   */
  meta: prismicT.GroupField<Simplify<PageDocumentDataMetaItem>>;
  /**
   * Выравнивание контента field in *Страница*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: page.align
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  align: prismicT.SelectField<"Слева" | "По центру" | "Справа">;
  /**
   * Slice Zone field in *Страница*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/slices
   *
   */
  slices: prismicT.SliceZone<PageDocumentDataSlicesSlice>;
}
/**
 * Item in Страница → SEO
 *
 */
export interface PageDocumentDataMetaItem {
  /**
   * title field in *Страница → SEO*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * description field in *Страница → SEO*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta[].description
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  description: prismicT.KeyTextField;
}
/**
 * Slice for *Страница → Slice Zone*
 *
 */
type PageDocumentDataSlicesSlice =
  | TextSlice
  | ImageWithCaptionSlice
  | HeaderWithLinkSlice
  | CardsSlice
  | FaqSlice
  | VideoSlice
  | StatisticsSlice
  | FormSlice
  | GapSlice
  | AuthorSlice
  | BannerSlice
  | HeaderSlice
  | HeroSlice
  | ButtonsV2Slice
  | QuotesSlice
  | DividerSlice
  | ReviewsSmartWidgetsSlice;
/**
 * Страница document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<Simplify<PageDocumentData>, "page", Lang>;
/** Content for Услуга documents */
interface ProductDocumentData {
  /**
   * Название field in *Услуга*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: product.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * Описание field in *Услуга*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: product.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  description: prismicT.RichTextField;
}
/**
 * Услуга document from Prismic
 *
 * - **API ID**: `product`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProductDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<
    Simplify<ProductDocumentData>,
    "product",
    Lang
  >;
export type AllDocumentTypes =
  | AuthorDocument
  | CategoryDocument
  | ConfigDocument
  | ContactsDocument
  | MenuDocument
  | PageDocument
  | ProductDocument;
/**
 * Primary content in Author → Primary
 *
 */
interface AuthorSliceDefaultPrimary {
  /**
   * Автор field in *Author → Primary*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: author.primary.author
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  author: prismicT.RelationField<"author">;
}
/**
 * Default variation for Author Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Text`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type AuthorSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<AuthorSliceDefaultPrimary>,
  never
>;
/**
 * Slice variation for *Author*
 *
 */
type AuthorSliceVariation = AuthorSliceDefault;
/**
 * Author Shared Slice
 *
 * - **API ID**: `author`
 * - **Description**: `Text`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type AuthorSlice = prismicT.SharedSlice<"author", AuthorSliceVariation>;
/**
 * Primary content in Banner → Primary
 *
 */
interface BannerSliceDefaultPrimary {
  /**
   * Заголовок field in *Banner → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: h1 для заголовка страницы
   * - **API ID Path**: banner.primary.title
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  title: prismicT.TitleField;
  /**
   * Описание field in *Banner → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Введите описание
   * - **API ID Path**: banner.primary.description
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  description: prismicT.RichTextField;
  /**
   * Картинка field in *Banner → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: banner.primary.image
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  image: prismicT.ImageField<never>;
  /**
   * Выравнивание field in *Banner → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Выравнивание контента
   * - **API ID Path**: banner.primary.align
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  align: prismicT.SelectField<"Слева" | "По центру" | "Справа">;
  /**
   * Ширина field in *Banner → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: banner.primary.width
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  width: prismicT.SelectField<
    "Во весь экран" | "В ширину контейнера" | "В ширину текста"
  >;
}
/**
 * Item in Banner → Items
 *
 */
export interface BannerSliceDefaultItem {
  /**
   * Название кнопки field in *Banner → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Введите название кнопки
   * - **API ID Path**: banner.items[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * Тип кнопки field in *Banner → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: banner.items[].variant
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  variant: prismicT.SelectField<
    | "Выпуклая"
    | "Заполненная"
    | "Тональная"
    | "Контурная"
    | "Текстовая"
    | "Подчеркнутая"
  >;
  /**
   * Размер кнопки field in *Banner → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: banner.items[].size
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  size: prismicT.SelectField<"Маленькая" | "Средняя" | "Большая" | "Огромная">;
  /**
   * Ссылка field in *Banner → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: banner.items[].link
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  link: prismicT.LinkField;
}
/**
 * Default variation for Banner Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Default`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type BannerSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<BannerSliceDefaultPrimary>,
  Simplify<BannerSliceDefaultItem>
>;
/**
 * Slice variation for *Banner*
 *
 */
type BannerSliceVariation = BannerSliceDefault;
/**
 * Banner Shared Slice
 *
 * - **API ID**: `banner`
 * - **Description**: `Banner`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type BannerSlice = prismicT.SharedSlice<"banner", BannerSliceVariation>;
/**
 * Primary content in Buttons → Primary
 *
 */
interface ButtonsV2SliceDefaultPrimary {
  /**
   * Ширина field in *Buttons → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: buttons_v2.primary.width
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  width: prismicT.SelectField<
    "Во весь экран" | "В ширину контейнера" | "В ширину текста"
  >;
  /**
   * Выравнивание field in *Buttons → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: Слева
   * - **API ID Path**: buttons_v2.primary.align
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  align: prismicT.SelectField<"Слева" | "По центру" | "Справа", "filled">;
}
/**
 * Item in Buttons → Items
 *
 */
export interface ButtonsV2SliceDefaultItem {
  /**
   * Название field in *Buttons → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: buttons_v2.items[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * Ссылка field in *Buttons → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: buttons_v2.items[].link
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  link: prismicT.LinkField;
  /**
   * Тип кнопки field in *Buttons → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: buttons_v2.items[].variant
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  variant: prismicT.SelectField<
    | "Выпуклая"
    | "Заполненная"
    | "Тональная"
    | "Контурная"
    | "Текстовая"
    | "Подчеркнутая"
  >;
  /**
   * Размер field in *Buttons → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: buttons_v2.items[].size
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  size: prismicT.SelectField<"Маленькая" | "Средняя" | "Большая" | "Огромная">;
  /**
   * Иконка в начале field in *Buttons → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Material Symbols. Например: star
   * - **API ID Path**: buttons_v2.items[].starticon
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  starticon: prismicT.KeyTextField;
  /**
   * Иконка в конце field in *Buttons → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Material Symbols. Например: star
   * - **API ID Path**: buttons_v2.items[].endicon
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  endicon: prismicT.KeyTextField;
}
/**
 * Default variation for Buttons Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Default`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ButtonsV2SliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<ButtonsV2SliceDefaultPrimary>,
  Simplify<ButtonsV2SliceDefaultItem>
>;
/**
 * Slice variation for *Buttons*
 *
 */
type ButtonsV2SliceVariation = ButtonsV2SliceDefault;
/**
 * Buttons Shared Slice
 *
 * - **API ID**: `buttons_v2`
 * - **Description**: `ButtonsV2`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ButtonsV2Slice = prismicT.SharedSlice<
  "buttons_v2",
  ButtonsV2SliceVariation
>;
/**
 * Primary content in Cards → Primary
 *
 */
interface CardsSliceDefaultPrimary {
  /**
   * Размер карточки field in *Cards → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.primary.size
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  size: prismicT.SelectField<"Маленькая" | "Средняя" | "Большая" | "Огромная">;
}
/**
 * Item in Cards → Items
 *
 */
export interface CardsSliceDefaultItem {
  /**
   * Название field in *Cards → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.items[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * Описание field in *Cards → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.items[].description
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  description: prismicT.KeyTextField;
  /**
   * Изображение field in *Cards → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.items[].image
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  image: prismicT.ImageField<never>;
  /**
   * Ссылка field in *Cards → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.items[].link
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  link: prismicT.LinkField;
}
/**
 * Default variation for Cards Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Cards`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type CardsSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<CardsSliceDefaultPrimary>,
  Simplify<CardsSliceDefaultItem>
>;
/**
 * Slice variation for *Cards*
 *
 */
type CardsSliceVariation = CardsSliceDefault;
/**
 * Cards Shared Slice
 *
 * - **API ID**: `cards`
 * - **Description**: `Cards`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type CardsSlice = prismicT.SharedSlice<"cards", CardsSliceVariation>;
/**
 * Primary content in Divider → Primary
 *
 */
interface DividerSliceDefaultPrimary {
  /**
   * Ширина field in *Divider → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: divider.primary.width
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  width: prismicT.SelectField<
    "Во весь экран" | "В ширину контейнера" | "В ширину текста"
  >;
}
/**
 * Default variation for Divider Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Default`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type DividerSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<DividerSliceDefaultPrimary>,
  never
>;
/**
 * Slice variation for *Divider*
 *
 */
type DividerSliceVariation = DividerSliceDefault;
/**
 * Divider Shared Slice
 *
 * - **API ID**: `divider`
 * - **Description**: `Divider`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type DividerSlice = prismicT.SharedSlice<
  "divider",
  DividerSliceVariation
>;
/**
 * Item in Faq → Items
 *
 */
export interface FaqSliceDefaultItem {
  /**
   * Вопрос field in *Faq → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: faq.items[].question
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  question: prismicT.KeyTextField;
  /**
   * Ответ field in *Faq → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: faq.items[].answer
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  answer: prismicT.RichTextField;
}
/**
 * Default variation for Faq Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Faq`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type FaqSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Record<string, never>,
  Simplify<FaqSliceDefaultItem>
>;
/**
 * Slice variation for *Faq*
 *
 */
type FaqSliceVariation = FaqSliceDefault;
/**
 * Faq Shared Slice
 *
 * - **API ID**: `faq`
 * - **Description**: `Faq`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type FaqSlice = prismicT.SharedSlice<"faq", FaqSliceVariation>;
/**
 * Primary content in Form → Primary
 *
 */
interface FormSliceDefaultPrimary {
  /**
   * Название кнопки field in *Form → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: form.primary.buttontitle
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  buttontitle: prismicT.KeyTextField;
  /**
   * buttonVariant field in *Form → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: form.primary.buttonvariant
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  buttonvariant: prismicT.SelectField<
    "filled" | "filledTonal" | "outlined" | "text"
  >;
}
/**
 * Item in Form → Items
 *
 */
export interface FormSliceDefaultItem {
  /**
   * title field in *Form → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: form.items[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * sliceExample field in *Form → Items*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: form.items[].sliceexample
   * - **Documentation**: https://prismic.io/docs/core-concepts/embed
   *
   */
  sliceexample: prismicT.EmbedField;
}
/**
 * Default variation for Form Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Form`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type FormSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<FormSliceDefaultPrimary>,
  Simplify<FormSliceDefaultItem>
>;
/**
 * Slice variation for *Form*
 *
 */
type FormSliceVariation = FormSliceDefault;
/**
 * Form Shared Slice
 *
 * - **API ID**: `form`
 * - **Description**: `Form`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type FormSlice = prismicT.SharedSlice<"form", FormSliceVariation>;
/**
 * Primary content in Gap → Primary
 *
 */
interface GapSliceDefaultPrimary {
  /**
   * Размер field in *Gap → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: gap.primary.size
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  size: prismicT.SelectField<"s" | "m" | "l">;
}
/**
 * Default variation for Gap Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Gap`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type GapSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<GapSliceDefaultPrimary>,
  never
>;
/**
 * Slice variation for *Gap*
 *
 */
type GapSliceVariation = GapSliceDefault;
/**
 * Gap Shared Slice
 *
 * - **API ID**: `gap`
 * - **Description**: `Gap`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type GapSlice = prismicT.SharedSlice<"gap", GapSliceVariation>;
/**
 * Primary content in Header → Primary
 *
 */
interface HeaderSliceDefaultPrimary {
  /**
   * Заголовок field in *Header → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Если заголовок страницы, то h1
   * - **API ID Path**: header.primary.title
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  title: prismicT.TitleField;
  /**
   * Описание field in *Header → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Введите описание
   * - **API ID Path**: header.primary.description
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  description: prismicT.RichTextField;
  /**
   * Выравнивание field in *Header → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: header.primary.align
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  align: prismicT.SelectField<"Слева" | "По центру" | "Справа">;
}
/**
 * Item in Header → Items
 *
 */
export interface HeaderSliceDefaultItem {
  /**
   * Название кнопки field in *Header → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Введите название кнопки
   * - **API ID Path**: header.items[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * Тип кнопки field in *Header → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: header.items[].variant
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  variant: prismicT.SelectField<
    | "Выпуклая"
    | "Заполненная"
    | "Тональная"
    | "Контурная"
    | "Текстовая"
    | "Подчеркнутая"
  >;
  /**
   * Размер кнопки field in *Header → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: header.items[].size
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  size: prismicT.SelectField<"Маленькая" | "Средняя" | "Большая" | "Огромная">;
  /**
   * Ссылка field in *Header → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: header.items[].link
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  link: prismicT.LinkField;
}
/**
 * Default variation for Header Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Default`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeaderSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<HeaderSliceDefaultPrimary>,
  Simplify<HeaderSliceDefaultItem>
>;
/**
 * Slice variation for *Header*
 *
 */
type HeaderSliceVariation = HeaderSliceDefault;
/**
 * Header Shared Slice
 *
 * - **API ID**: `header`
 * - **Description**: `Header`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeaderSlice = prismicT.SharedSlice<"header", HeaderSliceVariation>;
/**
 * Primary content in HeaderHorisontal → Primary
 *
 */
interface HeaderWithLinkSliceDefaultPrimary {
  /**
   * Заголовок field in *HeaderHorisontal → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Введите заголовок
   * - **API ID Path**: header_with_link.primary.title
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  title: prismicT.TitleField;
  /**
   * Описание field in *HeaderHorisontal → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Введите описание
   * - **API ID Path**: header_with_link.primary.description
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  description: prismicT.RichTextField;
}
/**
 * Item in HeaderHorisontal → Items
 *
 */
export interface HeaderWithLinkSliceDefaultItem {
  /**
   * Название кнопки field in *HeaderHorisontal → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: header_with_link.items[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * Ссылка field in *HeaderHorisontal → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: header_with_link.items[].link
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  link: prismicT.LinkField;
  /**
   * Тип кнопки field in *HeaderHorisontal → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: header_with_link.items[].variant
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  variant: prismicT.SelectField<
    | "Выпуклая"
    | "Заполненная"
    | "Тональная"
    | "Контурная"
    | "Текстовая"
    | "Подчеркнутая"
  >;
  /**
   * Размер кнопки field in *HeaderHorisontal → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: header_with_link.items[].size
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  size: prismicT.SelectField<"Маленькая" | "Средняя" | "Большая" | "Огромная">;
}
/**
 * Default variation for HeaderHorisontal Slice
 *
 * - **API ID**: `default`
 * - **Description**: `HeaderWithLink`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeaderWithLinkSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<HeaderWithLinkSliceDefaultPrimary>,
  Simplify<HeaderWithLinkSliceDefaultItem>
>;
/**
 * Slice variation for *HeaderHorisontal*
 *
 */
type HeaderWithLinkSliceVariation = HeaderWithLinkSliceDefault;
/**
 * HeaderHorisontal Shared Slice
 *
 * - **API ID**: `header_with_link`
 * - **Description**: `HeaderWithLink`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeaderWithLinkSlice = prismicT.SharedSlice<
  "header_with_link",
  HeaderWithLinkSliceVariation
>;
/**
 * Primary content in Hero → Primary
 *
 */
interface HeroSliceDefaultPrimary {
  /**
   * Заголовок field in *Hero → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.primary.title
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  title: prismicT.TitleField;
  /**
   * Описание field in *Hero → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Введите описание
   * - **API ID Path**: hero.primary.description
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  description: prismicT.RichTextField;
  /**
   * Изображение field in *Hero → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.primary.image
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  image: prismicT.ImageField<never>;
  /**
   * Положение изображения field in *Hero → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.primary.imageposition
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  imageposition: prismicT.SelectField<"Справа" | "Слева">;
  /**
   * Положение изображения на экране тел field in *Hero → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.primary.mobileimageposition
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  mobileimageposition: prismicT.SelectField<
    "Сверху" | "Снизу" | "Не показывать"
  >;
  /**
   * Размер изображения field in *Hero → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.primary.imageweight
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  imageweight: prismicT.SelectField<"s" | "m" | "l">;
  /**
   * Выравнивание контента field in *Hero → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: Слева
   * - **API ID Path**: hero.primary.align
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  align: prismicT.SelectField<"Слева" | "По центру" | "Справа", "filled">;
  /**
   * Ширина field in *Hero → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.primary.width
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  width: prismicT.SelectField<
    "Во весь экран" | "В ширину контейнера" | "В ширину текста"
  >;
}
/**
 * Item in Hero → Items
 *
 */
export interface HeroSliceDefaultItem {
  /**
   * Название кнопки field in *Hero → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.items[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * Тип кнопки field in *Hero → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.items[].variant
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  variant: prismicT.SelectField<
    | "Выпуклая"
    | "Заполненная"
    | "Тональная"
    | "Контурная"
    | "Текстовая"
    | "Подчеркнутая"
  >;
  /**
   * Размер кнопки field in *Hero → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.items[].size
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  size: prismicT.SelectField<"Маленькая" | "Средняя" | "Большая" | "Огромная">;
  /**
   * Ссылка field in *Hero → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.items[].link
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  link: prismicT.LinkField;
}
/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Default`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  Simplify<HeroSliceDefaultItem>
>;
/**
 * Slice variation for *Hero*
 *
 */
type HeroSliceVariation = HeroSliceDefault;
/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSlice = prismicT.SharedSlice<"hero", HeroSliceVariation>;
/**
 * Primary content in Image → Primary
 *
 */
interface ImageWithCaptionSliceDefaultPrimary {
  /**
   * Картинка field in *Image → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_with_caption.primary.image
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  image: prismicT.ImageField<never>;
  /**
   * Подпись field in *Image → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: image_with_caption.primary.caption
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  caption: prismicT.KeyTextField;
  /**
   * Ширина field in *Image → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: image_with_caption.primary.width
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  width: prismicT.SelectField<
    "Во весь экран" | "В ширину контейнера" | "В ширину текста"
  >;
}
/**
 * Default variation for Image Slice
 *
 * - **API ID**: `default`
 * - **Description**: `ImageWithCaption`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageWithCaptionSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<ImageWithCaptionSliceDefaultPrimary>,
  never
>;
/**
 * Slice variation for *Image*
 *
 */
type ImageWithCaptionSliceVariation = ImageWithCaptionSliceDefault;
/**
 * Image Shared Slice
 *
 * - **API ID**: `image_with_caption`
 * - **Description**: `ImageWithCaption`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageWithCaptionSlice = prismicT.SharedSlice<
  "image_with_caption",
  ImageWithCaptionSliceVariation
>;
/**
 * Primary content in Quiz → Primary
 *
 */
interface QuizSliceDefaultPrimary {
  /**
   * Заголовок field in *Quiz → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Как внедрить раздельный сбор мусора
   * - **API ID Path**: quiz.primary.title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * Описание field in *Quiz → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Пройди тест и узнай, как внедрить..
   * - **API ID Path**: quiz.primary.description
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  description: prismicT.RichTextField;
  /**
   * Картинка field in *Quiz → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: quiz.primary.image
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  image: prismicT.ImageField<never>;
}
/**
 * Default variation for Quiz Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Text`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type QuizSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<QuizSliceDefaultPrimary>,
  never
>;
/**
 * Slice variation for *Quiz*
 *
 */
type QuizSliceVariation = QuizSliceDefault;
/**
 * Quiz Shared Slice
 *
 * - **API ID**: `quiz`
 * - **Description**: `Text`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type QuizSlice = prismicT.SharedSlice<"quiz", QuizSliceVariation>;
/**
 * Primary content in Quotes → Primary
 *
 */
interface QuotesSliceDefaultPrimary {
  /**
   * Размер карточки field in *Quotes → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: quotes.primary.size
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  size: prismicT.SelectField<"Маленькая" | "Средняя" | "Большая" | "Огромная">;
  /**
   * Тип карточки field in *Quotes → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: quotes.primary.variant
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  variant: prismicT.SelectField<"Обычная" | "Заполненная" | "Контурная">;
}
/**
 * Item in Quotes → Items
 *
 */
export interface QuotesSliceDefaultItem {
  /**
   * text field in *Quotes → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: quotes.items[].text
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  text: prismicT.RichTextField;
  /**
   * author field in *Quotes → Items*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: quotes.items[].author
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  author: prismicT.RelationField<"author">;
}
/**
 * Default variation for Quotes Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Default`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type QuotesSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<QuotesSliceDefaultPrimary>,
  Simplify<QuotesSliceDefaultItem>
>;
/**
 * Slice variation for *Quotes*
 *
 */
type QuotesSliceVariation = QuotesSliceDefault;
/**
 * Quotes Shared Slice
 *
 * - **API ID**: `quotes`
 * - **Description**: `Quotes`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type QuotesSlice = prismicT.SharedSlice<"quotes", QuotesSliceVariation>;
/**
 * Primary content in ReviewsSmartWidgets → Primary
 *
 */
interface ReviewsSmartWidgetsSliceDefaultPrimary {
  /**
   * data-app field in *ReviewsSmartWidgets → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: reviews_smart_widgets.primary.dataapp
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  dataapp: prismicT.KeyTextField;
}
/**
 * Default variation for ReviewsSmartWidgets Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Default`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ReviewsSmartWidgetsSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<ReviewsSmartWidgetsSliceDefaultPrimary>,
  never
>;
/**
 * Slice variation for *ReviewsSmartWidgets*
 *
 */
type ReviewsSmartWidgetsSliceVariation = ReviewsSmartWidgetsSliceDefault;
/**
 * ReviewsSmartWidgets Shared Slice
 *
 * - **API ID**: `reviews_smart_widgets`
 * - **Description**: `ReviewsSmartWidgets`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ReviewsSmartWidgetsSlice = prismicT.SharedSlice<
  "reviews_smart_widgets",
  ReviewsSmartWidgetsSliceVariation
>;
/**
 * Item in Statistics → Items
 *
 */
export interface StatisticsSliceDefaultItem {
  /**
   * value field in *Statistics → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: statistics.items[].value
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  value: prismicT.KeyTextField;
  /**
   * Описание field in *Statistics → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: statistics.items[].description
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  description: prismicT.KeyTextField;
}
/**
 * Default variation for Statistics Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Statistics`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type StatisticsSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Record<string, never>,
  Simplify<StatisticsSliceDefaultItem>
>;
/**
 * Slice variation for *Statistics*
 *
 */
type StatisticsSliceVariation = StatisticsSliceDefault;
/**
 * Statistics Shared Slice
 *
 * - **API ID**: `statistics`
 * - **Description**: `Statistics`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type StatisticsSlice = prismicT.SharedSlice<
  "statistics",
  StatisticsSliceVariation
>;
/**
 * Primary content in Text → Primary
 *
 */
interface TextSliceDefaultPrimary {
  /**
   * Content field in *Text → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text.primary.content
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  content: prismicT.RichTextField;
}
/**
 * Default variation for Text Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Text`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TextSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<TextSliceDefaultPrimary>,
  never
>;
/**
 * Slice variation for *Text*
 *
 */
type TextSliceVariation = TextSliceDefault;
/**
 * Text Shared Slice
 *
 * - **API ID**: `text`
 * - **Description**: `Text`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TextSlice = prismicT.SharedSlice<"text", TextSliceVariation>;
/**
 * Primary content in Video → Primary
 *
 */
interface VideoSliceDefaultPrimary {
  /**
   * Ссылка field in *Video → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: https://youtu.be/9V4Tl0dBkVE
   * - **API ID Path**: video.primary.url
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  url: prismicT.KeyTextField;
  /**
   * Ширина field in *Video → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: video.primary.width
   * - **Documentation**: https://prismic.io/docs/core-concepts/select
   *
   */
  width: prismicT.SelectField<
    "Во весь экран" | "В ширину контейнера" | "В ширину текста"
  >;
}
/**
 * Default variation for Video Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Video`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type VideoSliceDefault = prismicT.SharedSliceVariation<
  "default",
  Simplify<VideoSliceDefaultPrimary>,
  never
>;
/**
 * Slice variation for *Video*
 *
 */
type VideoSliceVariation = VideoSliceDefault;
/**
 * Video Shared Slice
 *
 * - **API ID**: `video`
 * - **Description**: `Video`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type VideoSlice = prismicT.SharedSlice<"video", VideoSliceVariation>;
declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig
    ): prismic.Client<AllDocumentTypes>;
  }
  namespace Content {
    export type {
      AuthorDocumentData,
      AuthorDocument,
      CategoryDocumentData,
      CategoryDocument,
      ConfigDocumentData,
      ConfigDocumentDataButtonsItem,
      ConfigDocumentDataButtonsbottomItem,
      ConfigDocumentDataSlicesSlice,
      ConfigDocument,
      ContactsDocumentData,
      ContactsDocument,
      MenuDocumentData,
      MenuDocumentDataMenuitemItem,
      MenuDocument,
      PageDocumentData,
      PageDocumentDataMetaItem,
      PageDocumentDataSlicesSlice,
      PageDocument,
      ProductDocumentData,
      ProductDocument,
      AllDocumentTypes,
      AuthorSliceDefaultPrimary,
      AuthorSliceDefault,
      AuthorSliceVariation,
      AuthorSlice,
      BannerSliceDefaultPrimary,
      BannerSliceDefaultItem,
      BannerSliceDefault,
      BannerSliceVariation,
      BannerSlice,
      ButtonsV2SliceDefaultPrimary,
      ButtonsV2SliceDefaultItem,
      ButtonsV2SliceDefault,
      ButtonsV2SliceVariation,
      ButtonsV2Slice,
      CardsSliceDefaultPrimary,
      CardsSliceDefaultItem,
      CardsSliceDefault,
      CardsSliceVariation,
      CardsSlice,
      DividerSliceDefaultPrimary,
      DividerSliceDefault,
      DividerSliceVariation,
      DividerSlice,
      FaqSliceDefaultItem,
      FaqSliceDefault,
      FaqSliceVariation,
      FaqSlice,
      FormSliceDefaultPrimary,
      FormSliceDefaultItem,
      FormSliceDefault,
      FormSliceVariation,
      FormSlice,
      GapSliceDefaultPrimary,
      GapSliceDefault,
      GapSliceVariation,
      GapSlice,
      HeaderSliceDefaultPrimary,
      HeaderSliceDefaultItem,
      HeaderSliceDefault,
      HeaderSliceVariation,
      HeaderSlice,
      HeaderWithLinkSliceDefaultPrimary,
      HeaderWithLinkSliceDefaultItem,
      HeaderWithLinkSliceDefault,
      HeaderWithLinkSliceVariation,
      HeaderWithLinkSlice,
      HeroSliceDefaultPrimary,
      HeroSliceDefaultItem,
      HeroSliceDefault,
      HeroSliceVariation,
      HeroSlice,
      ImageWithCaptionSliceDefaultPrimary,
      ImageWithCaptionSliceDefault,
      ImageWithCaptionSliceVariation,
      ImageWithCaptionSlice,
      QuizSliceDefaultPrimary,
      QuizSliceDefault,
      QuizSliceVariation,
      QuizSlice,
      QuotesSliceDefaultPrimary,
      QuotesSliceDefaultItem,
      QuotesSliceDefault,
      QuotesSliceVariation,
      QuotesSlice,
      ReviewsSmartWidgetsSliceDefaultPrimary,
      ReviewsSmartWidgetsSliceDefault,
      ReviewsSmartWidgetsSliceVariation,
      ReviewsSmartWidgetsSlice,
      StatisticsSliceDefaultItem,
      StatisticsSliceDefault,
      StatisticsSliceVariation,
      StatisticsSlice,
      TextSliceDefaultPrimary,
      TextSliceDefault,
      TextSliceVariation,
      TextSlice,
      VideoSliceDefaultPrimary,
      VideoSliceDefault,
      VideoSliceVariation,
      VideoSlice,
    };
  }
}
